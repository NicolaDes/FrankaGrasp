# Autogenerated param section. Do not hand edit.
param {
group.0 {
name=Dynamically Reconfigurable Parameters
desc=See the [[dynamic_reconfigure]] package for details on dynamically reconfigurable parameters.
0.name= ~run
0.default= False
0.type= bool
0.desc=Whether or not the util node is running. 
1.name= ~debug
1.default= False
1.type= bool
1.desc=Whether or not to print debug messages. 
2.name= ~transform_to_global
2.default= False
2.type= bool
2.desc=Whether or not to transform point cloud to global frame. 
3.name= ~clean_missing_points
3.default= False
3.type= bool
3.desc=Whether or not to clean NaN points. 
4.name= ~remove_plane
4.default= False
4.type= bool
4.desc=Whether or not to use RANSAC to remove the plane. 
5.name= ~ransac_tol
5.default= 0.025
5.type= double
5.desc=The tolerance for plane detection. Range: 0.0 to 0.1
6.name= ~ransac_iter
6.default= 20
6.type= int
6.desc=The number of iterations to run ransac for. Range: 1 to 100
7.name= ~remove_outlier
7.default= False
7.type= bool
7.desc=Whether or not to use remove outliers using statistical outlier removal. 
8.name= ~outlier_mean_k
8.default= 50
8.type= int
8.desc=The number of points (k) to use for mean distance estimation. Range: 1 to 200
9.name= ~outlier_StddevMulThresh
9.default= 1.0
9.type= double
9.desc=The standard deviation multiplier threshold. All points outside the +/- * std_mul will be considered outliers. Range: 0.0 to 10.0
10.name= ~remove_user_plane
10.default= False
10.type= bool
10.desc=Whether or not to remove a user-specified plane.  All points with ax+by+cz+d >= 0 are kept. 
11.name= ~user_plane_a
11.default= 0.0
11.type= double
11.desc=Value of a for user-specified plane.. Range: -std::numeric_limits<double>::infinity() to std::numeric_limits<double>::infinity()
12.name= ~user_plane_b
12.default= 0.0
12.type= double
12.desc=Value of b for user-specified plane.. Range: -std::numeric_limits<double>::infinity() to std::numeric_limits<double>::infinity()
13.name= ~user_plane_c
13.default= 0.0
13.type= double
13.desc=Value of c for user-specified plane.. Range: -std::numeric_limits<double>::infinity() to std::numeric_limits<double>::infinity()
14.name= ~user_plane_d
14.default= 1.0
14.type= double
14.desc=Value of d for user-specified plane.. Range: -std::numeric_limits<double>::infinity() to std::numeric_limits<double>::infinity()
15.name= ~estimate_normals
15.default= False
15.type= bool
15.desc=Whether or not to estimate normals. 
16.name= ~normals_k_neighbors
16.default= 20
16.type= int
16.desc=The number of neighboring points (k) to use for normal estimation. Range: 1 to 200
17.name= ~write_binary
17.default= False
17.type= bool
17.desc=Whether or not to write as a binary file. 
18.name= ~write_depth_map
18.default= False
18.type= bool
18.desc=Whether or not to save the disparity image. 
19.name= ~write_ascii_precision
19.default= 12
19.type= int
19.desc=The level of precision for writing as ascii Range: 1 to 99
20.name= ~write_next
20.default= False
20.type= bool
20.desc=Whether or not to save the next point cloud to file. 
21.name= ~write_file_prefix
21.default= pcd
21.type= str
21.desc=The prefix of the file to write. 
22.name= ~write_file_num
22.default= 0
22.type= int
22.desc=The number of the next file to write Range: 0 to 9999
}
}
# End of autogenerated section. You may edit below.
