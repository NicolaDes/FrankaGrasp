\subsubsection parameters ROS parameters

Reads and maintains the following parameters on the ROS server

- \b "~run" : \b [bool] Whether or not the util node is running. min: False, default: False, max: True
- \b "~debug" : \b [bool] Whether or not to print debug messages. min: False, default: False, max: True
- \b "~transform_to_global" : \b [bool] Whether or not to transform point cloud to global frame. min: False, default: False, max: True
- \b "~clean_missing_points" : \b [bool] Whether or not to clean NaN points. min: False, default: False, max: True
- \b "~remove_plane" : \b [bool] Whether or not to use RANSAC to remove the plane. min: False, default: False, max: True
- \b "~ransac_tol" : \b [double] The tolerance for plane detection. min: 0.0, default: 0.025, max: 0.1
- \b "~ransac_iter" : \b [int] The number of iterations to run ransac for. min: 1, default: 20, max: 100
- \b "~remove_outlier" : \b [bool] Whether or not to use remove outliers using statistical outlier removal. min: False, default: False, max: True
- \b "~outlier_mean_k" : \b [int] The number of points (k) to use for mean distance estimation. min: 1, default: 50, max: 200
- \b "~outlier_StddevMulThresh" : \b [double] The standard deviation multiplier threshold. All points outside the +/- * std_mul will be considered outliers. min: 0.0, default: 1.0, max: 10.0
- \b "~remove_user_plane" : \b [bool] Whether or not to remove a user-specified plane.  All points with ax+by+cz+d >= 0 are kept. min: False, default: False, max: True
- \b "~user_plane_a" : \b [double] Value of a for user-specified plane.. min: -std::numeric_limits<double>::infinity(), default: 0.0, max: std::numeric_limits<double>::infinity()
- \b "~user_plane_b" : \b [double] Value of b for user-specified plane.. min: -std::numeric_limits<double>::infinity(), default: 0.0, max: std::numeric_limits<double>::infinity()
- \b "~user_plane_c" : \b [double] Value of c for user-specified plane.. min: -std::numeric_limits<double>::infinity(), default: 0.0, max: std::numeric_limits<double>::infinity()
- \b "~user_plane_d" : \b [double] Value of d for user-specified plane.. min: -std::numeric_limits<double>::infinity(), default: 1.0, max: std::numeric_limits<double>::infinity()
- \b "~estimate_normals" : \b [bool] Whether or not to estimate normals. min: False, default: False, max: True
- \b "~normals_k_neighbors" : \b [int] The number of neighboring points (k) to use for normal estimation. min: 1, default: 20, max: 200
- \b "~write_binary" : \b [bool] Whether or not to write as a binary file. min: False, default: False, max: True
- \b "~write_depth_map" : \b [bool] Whether or not to save the disparity image. min: False, default: False, max: True
- \b "~write_ascii_precision" : \b [int] The level of precision for writing as ascii min: 1, default: 12, max: 99
- \b "~write_next" : \b [bool] Whether or not to save the next point cloud to file. min: False, default: False, max: True
- \b "~write_file_prefix" : \b [str] The prefix of the file to write. min: , default: pcd, max: 
- \b "~write_file_num" : \b [int] The number of the next file to write min: 0, default: 0, max: 9999

